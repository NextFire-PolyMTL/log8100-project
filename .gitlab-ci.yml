stages:
  - build
  - analyze
  - deploy

variables:
  DOCKER_IMAGE_NAME: "tuan1234/juice-shop"
  JUICE_SHOP_REMOTE_REPO_URL: "https://github.com/juice-shop/juice-shop.git"
  SONARQUBE_TOKEN: "your_generated_token"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

build_docker:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - apk add git
    - cd juice-shop
    - docker build -t $DOCKER_IMAGE_NAME .

tflint:
  stage: analyze
  allow_failure: true
  image:
    name: ghcr.io/terraform-linters/tflint
  script:
    - tflint --chdir terraform

checkov:
  stage: analyze
  allow_failure: true
  image:
    name: bridgecrew/checkov:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - checkov -d . -o junitxml | tee checkov.report.xml
  artifacts:
    reports:
      junit: "checkov.report.xml"
    paths:
      - "checkov.report.xml"

terrascan:
  stage: analyze
  allow_failure: true
  image:
    name: tenable/terrascan:latest
    entrypoint: [ '/bin/sh', '-c' ]
  script:
    - /go/bin/terrascan scan .

terraform-fmt:
  stage: analyze
  allow_failure: true
  image:
    name: hashicorp/terraform
  script:
    - terraform fmt -check

owasp_zap_scan:
  stage: analyze
  image: owasp/zap2docker-stable:2.12.0
  allow_failure: true
  artifacts:
    when: always
    expire_in: "30 days"
    paths:
      - "owasp_zap_scan/testreport.xml"
  script:
    - mkdir -p /zap/wrk owasp_zap_scan
    - /zap/zap-baseline.py -t https://owasp-juice-shop-demo-0d931ec9d675.herokuapp.com/ -g gen.conf -x $(pwd)/owasp_zap_scan/testreport.xml

sonarqube:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - sonar-scanner -Dsonar.login=$SONARQUBE_TOKEN
  only:
    - master

push_docker:
  stage: deploy
  needs: ["build_docker"]
  script:
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASWORD $CI_REGISTRY
    - docker push $DOCKER_IMAGE_NAME
  only:
    - master
